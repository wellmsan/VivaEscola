{"version":3,"sources":["../../src/controllers/municipioController.js"],"names":["repository","MunicipioRepository","MunicipioController","constructor","list","req","res","params","id","query","then","data","status","json","e","send","message","get","create","errors","length","body","update","console","log","delete"],"mappings":"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","file":"municipioController.js","sourcesContent":["import MunicipioRepository from '../repositories/municipioRepository';\nimport {validationResult} from 'express-validator';\n\n/* eslint-disable new-cap */\nconst repository = new MunicipioRepository();\n\nclass MunicipioController {\n    constructor() { }\n\n    list(req, res) {\n        if (!req.params.id) {\n            repository.list(req.query)\n                .then(async (data) => {\n                    res.status(200).json(data);\n                }, (e) => {\n                    res.status(500).send({message: 'Error: ' + e.message});\n                });\n        } else {\n            repository.get(req.params.id)\n                .then(async (data) => {\n                    res.status(200).json(data);\n                }, (e) => {\n                    res.status(500).send({message: 'Error: ' + e.message});\n                });\n        }\n    }\n\n    create(req, res) {\n        const {errors} = validationResult(req);\n        if (errors.length > 0) {\n            res.status(400).send({message: 'Error: ' + errors});\n        }\n        try {\n            repository.create(req.body);\n            res.status(201).send({message: 'Escola cadastrada com sucesso!'});\n        } catch (e) {\n            res.status(500).send({message: 'Error: ' + e.message});\n        }\n    }\n\n    update(req, res) {\n        const {errors} = validationResult(req);\n        if (errors.length > 0) {\n            res.status(400).send({message: 'Error: ' + errors});\n        }\n        try {\n            console.log('ID: ' + req.params.id);\n            repository.update(req.params.id, req.body);\n            res.status(201).send({message: 'Escola atualizada com sucesso!'});\n        } catch (e) {\n            res.status(500).send({message: 'Error: ' + e.message});\n        }\n    }\n\n    delete(req, res) {\n        repository.delete(req.params.id)\n            .then(async () => {\n                res.status(201).send({message: 'Escola excuÃ­da com sucesso!'});\n            }, (e) => {\n                res.status(500).send({message: 'Error: ' + e.message});\n            });\n    }\n}\n\nexport default MunicipioController;\n"]}