{"version":3,"sources":["../src/app.js"],"names":["require","config","app","use","disable","set","path","join","__dirname","get","mongoose","connect","process","env","DATABASE_CONNECTION_STRING","useNewUrlParser","useFindAndModify","useCreateIndex","db","connection","on","console","log","err","close","exit","bodyParser","json","urlencoded","extended","express","static","routes","escolaRouter","municipioRouter","censoRouter","dadosCensoRouter","req","res","next","Error","status","locals","message","error","render","server","http","createServer","port","listen","util","getEnv"],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport http from 'http';\nimport path from 'path';\nimport config from 'config';\nimport routes from './routes';\nimport escolaRouter from './routes/escolaRouter';\nimport municipioRouter from './routes/municipioRouter';\nimport censoRouter from './routes/censoRouter';\nimport dadosCensoRouter from './routes/dadosCensoRouter'\nimport mongoose from 'mongoose';\nimport cors from 'cors';\nrequire('dotenv').config();\n\nconst app = express();\napp.use(cors());\n\napp.disable('x-powered-by'); // disable x-powered-by\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'ejs');\napp.set('port', config.get('app.port'));\n\n// Database\nmongoose.connect(process.env.DATABASE_CONNECTION_STRING, {\n    useNewUrlParser: true,\n    useFindAndModify: true,\n    useCreateIndex: true,\n});\n\nconst db = mongoose.connection;\n\ndb.on('connected', () => {\n    console.log('Mongoose default connection is open');\n});\n\ndb.on('error', (err) => {\n    console.log(`Mongoose default connection has occured \\n${err}`);\n});\n\ndb.on('disconnected', () => {\n    console.log('Mongoose default connection is disconnected');\n});\n\nprocess.on('SIGINT', () => {\n    db.close(() => {\n        console.log(\n            'Mongoose default connection is disconnected due to application termination'\n        );\n        process.exit(0);\n    });\n});\n\n// uncomment after placing your favicon in /public\n// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/', routes);\napp.use('/escolas', escolaRouter);\napp.use('/municipios', municipioRouter);\napp.use('/censos', censoRouter);\napp.use('/dadoscenso', dadosCensoRouter);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n\tconst err = new Error('Not Found');\n\terr.status = 404;\n\tnext(err);\n});\n\n// error handler\napp.use((err, req, res, next) => {\n\t// set locals, only providing error in development\n\tres.locals.message = err.message;\n\tres.locals.error = req.app.get('env') === 'development' ? err : {};\n\n\t// render the error page\n\tres.status(err.status || 500);\n\tres.render('error');\n});\n\nconst server = http.createServer(app);\nconst port = app.get('port');\nserver.listen(port, () => {\n\tconsole.log(`Application listening on ${config.get('app.baseUrl')}`);\n\tconsole.log(`Environment => ${config.util.getEnv('NODE_ENV')}`);\n});\n\nexport default app;\n"]}